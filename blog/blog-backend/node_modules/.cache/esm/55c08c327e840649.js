let Koa,Router,bodyParser,mongoose,api;_7e8‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_7e8‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_7e8‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_7e8‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_7e8‍.w("./api",[["default",["api"],function(v){api=v}]]);require('dotenv').config();







const {PORT, MONGO_URI} = process.env;

mongoose
 .connect(
    MONGO_URI, {useNewUrlParser: true, useFindAndModify: false})
    .then(()=>{
        console.log('Connected to MongoDB');
    })
    .catch(e => {
        _7e8‍.g.console.error(e);
    });

const app = new Koa();
const router = new Router();

//라우터 설정
router.use('/api', api.routes()); //api 라우트 적용

app.use(bodyParser());

//app 인스턴스에 라우터 적용
app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(port, ()=>{
    _7e8‍.g.console.log('Listening to port %d',port);
});
